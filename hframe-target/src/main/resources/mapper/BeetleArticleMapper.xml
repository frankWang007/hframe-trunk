<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ucf.first.dao.BeetleArticleMapper">
  <resultMap id="BaseResultMap" type="com.ucf.first.ao.BeetleArticle">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="res_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="level" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="node_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="subtitle" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="intro" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="pic" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="view_order" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="pub_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="allow" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ucf.first.ao.BeetleArticle">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="res_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="level" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="node_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="subtitle" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="intro" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="pic" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="view_order" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="pub_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="allow" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, res_name, level, node_id, title, subtitle, intro, pic, view_order, status, pub_time, 
    update_user_id, update_time, create_user_id, create_time, allow
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ucf.first.ao.BeetleArticle_Example" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ucf.first.ao.BeetleArticle_Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitEnd != null and limitEnd != 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from beetle_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from beetle_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ucf.first.ao.BeetleArticle_Example">
    delete from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ucf.first.ao.BeetleArticle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into beetle_article (res_name, level, node_id, 
      title, subtitle, intro, pic, 
      view_order, status, pub_time, 
      update_user_id, update_time, create_user_id, 
      create_time, allow, content
      )
    values (#{resName,jdbcType=CHAR}, #{level,jdbcType=CHAR}, #{nodeId,jdbcType=CHAR}, 
      #{title,jdbcType=CHAR}, #{subtitle,jdbcType=CHAR}, #{intro,jdbcType=CHAR}, #{pic,jdbcType=CHAR}, 
      #{viewOrder,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{pubTime,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=INTEGER}, #{allow,jdbcType=CHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ucf.first.ao.BeetleArticle">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into beetle_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resName != null">
        res_name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="subtitle != null">
        subtitle,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="viewOrder != null">
        view_order,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="pubTime != null">
        pub_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="allow != null">
        allow,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resName != null">
        #{resName,jdbcType=CHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=CHAR},
      </if>
      <if test="subtitle != null">
        #{subtitle,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=CHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=CHAR},
      </if>
      <if test="viewOrder != null">
        #{viewOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="pubTime != null">
        #{pubTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="allow != null">
        #{allow,jdbcType=CHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ucf.first.ao.BeetleArticle_Example" resultType="java.lang.Integer">
    select count(*) from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update beetle_article
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.resName != null">
        res_name = #{record.resName,jdbcType=CHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=CHAR},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=CHAR},
      </if>
      <if test="record.subtitle != null">
        subtitle = #{record.subtitle,jdbcType=CHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=CHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=CHAR},
      </if>
      <if test="record.viewOrder != null">
        view_order = #{record.viewOrder,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.pubTime != null">
        pub_time = #{record.pubTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.allow != null">
        allow = #{record.allow,jdbcType=CHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update beetle_article
    set id = #{record.id,jdbcType=INTEGER},
      res_name = #{record.resName,jdbcType=CHAR},
      level = #{record.level,jdbcType=CHAR},
      node_id = #{record.nodeId,jdbcType=CHAR},
      title = #{record.title,jdbcType=CHAR},
      subtitle = #{record.subtitle,jdbcType=CHAR},
      intro = #{record.intro,jdbcType=CHAR},
      pic = #{record.pic,jdbcType=CHAR},
      view_order = #{record.viewOrder,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      pub_time = #{record.pubTime,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      allow = #{record.allow,jdbcType=CHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update beetle_article
    set id = #{record.id,jdbcType=INTEGER},
      res_name = #{record.resName,jdbcType=CHAR},
      level = #{record.level,jdbcType=CHAR},
      node_id = #{record.nodeId,jdbcType=CHAR},
      title = #{record.title,jdbcType=CHAR},
      subtitle = #{record.subtitle,jdbcType=CHAR},
      intro = #{record.intro,jdbcType=CHAR},
      pic = #{record.pic,jdbcType=CHAR},
      view_order = #{record.viewOrder,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      pub_time = #{record.pubTime,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      allow = #{record.allow,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ucf.first.ao.BeetleArticle">
    update beetle_article
    <set>
      <if test="resName != null">
        res_name = #{resName,jdbcType=CHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=CHAR},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=CHAR},
      </if>
      <if test="subtitle != null">
        subtitle = #{subtitle,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=CHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=CHAR},
      </if>
      <if test="viewOrder != null">
        view_order = #{viewOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="pubTime != null">
        pub_time = #{pubTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="allow != null">
        allow = #{allow,jdbcType=CHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ucf.first.ao.BeetleArticle">
    update beetle_article
    set res_name = #{resName,jdbcType=CHAR},
      level = #{level,jdbcType=CHAR},
      node_id = #{nodeId,jdbcType=CHAR},
      title = #{title,jdbcType=CHAR},
      subtitle = #{subtitle,jdbcType=CHAR},
      intro = #{intro,jdbcType=CHAR},
      pic = #{pic,jdbcType=CHAR},
      view_order = #{viewOrder,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      pub_time = #{pubTime,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      allow = #{allow,jdbcType=CHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ucf.first.ao.BeetleArticle">
    update beetle_article
    set res_name = #{resName,jdbcType=CHAR},
      level = #{level,jdbcType=CHAR},
      node_id = #{nodeId,jdbcType=CHAR},
      title = #{title,jdbcType=CHAR},
      subtitle = #{subtitle,jdbcType=CHAR},
      intro = #{intro,jdbcType=CHAR},
      pic = #{pic,jdbcType=CHAR},
      view_order = #{viewOrder,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      pub_time = #{pubTime,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      allow = #{allow,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.ucf.first.ao.BeetleArticle">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="res_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="level" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="node_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="subtitle" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="intro" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="pic" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="view_order" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="pub_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="allow" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ucf.first.ao.BeetleArticle">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="res_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="level" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="node_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="subtitle" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="intro" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="pic" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="view_order" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="pub_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="allow" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, res_name, level, node_id, title, subtitle, intro, pic, view_order, status, pub_time, 
    update_user_id, update_time, create_user_id, create_time, allow
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ucf.first.ao.BeetleArticle_Example" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ucf.first.ao.BeetleArticle_Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitEnd != null and limitEnd != 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from beetle_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from beetle_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ucf.first.ao.BeetleArticle_Example">
    delete from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ucf.first.ao.BeetleArticle">
    insert into beetle_article (id, res_name, level, 
      node_id, title, subtitle, intro, 
      pic, view_order, status, 
      pub_time, update_user_id, update_time, 
      create_user_id, create_time, allow, 
      content)
    values (#{id,jdbcType=INTEGER}, #{resName,jdbcType=CHAR}, #{level,jdbcType=CHAR}, 
      #{nodeId,jdbcType=CHAR}, #{title,jdbcType=CHAR}, #{subtitle,jdbcType=CHAR}, #{intro,jdbcType=CHAR}, 
      #{pic,jdbcType=CHAR}, #{viewOrder,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{pubTime,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, #{allow,jdbcType=CHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ucf.first.ao.BeetleArticle">
    insert into beetle_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="resName != null">
        res_name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="subtitle != null">
        subtitle,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="viewOrder != null">
        view_order,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="pubTime != null">
        pub_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="allow != null">
        allow,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resName != null">
        #{resName,jdbcType=CHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=CHAR},
      </if>
      <if test="subtitle != null">
        #{subtitle,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=CHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=CHAR},
      </if>
      <if test="viewOrder != null">
        #{viewOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="pubTime != null">
        #{pubTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="allow != null">
        #{allow,jdbcType=CHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ucf.first.ao.BeetleArticle_Example" resultType="java.lang.Integer">
    select count(*) from beetle_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update beetle_article
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.resName != null">
        res_name = #{record.resName,jdbcType=CHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=CHAR},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=CHAR},
      </if>
      <if test="record.subtitle != null">
        subtitle = #{record.subtitle,jdbcType=CHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=CHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=CHAR},
      </if>
      <if test="record.viewOrder != null">
        view_order = #{record.viewOrder,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.pubTime != null">
        pub_time = #{record.pubTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.allow != null">
        allow = #{record.allow,jdbcType=CHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update beetle_article
    set id = #{record.id,jdbcType=INTEGER},
      res_name = #{record.resName,jdbcType=CHAR},
      level = #{record.level,jdbcType=CHAR},
      node_id = #{record.nodeId,jdbcType=CHAR},
      title = #{record.title,jdbcType=CHAR},
      subtitle = #{record.subtitle,jdbcType=CHAR},
      intro = #{record.intro,jdbcType=CHAR},
      pic = #{record.pic,jdbcType=CHAR},
      view_order = #{record.viewOrder,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      pub_time = #{record.pubTime,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      allow = #{record.allow,jdbcType=CHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update beetle_article
    set id = #{record.id,jdbcType=INTEGER},
      res_name = #{record.resName,jdbcType=CHAR},
      level = #{record.level,jdbcType=CHAR},
      node_id = #{record.nodeId,jdbcType=CHAR},
      title = #{record.title,jdbcType=CHAR},
      subtitle = #{record.subtitle,jdbcType=CHAR},
      intro = #{record.intro,jdbcType=CHAR},
      pic = #{record.pic,jdbcType=CHAR},
      view_order = #{record.viewOrder,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      pub_time = #{record.pubTime,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      allow = #{record.allow,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ucf.first.ao.BeetleArticle">
    update beetle_article
    <set>
      <if test="resName != null">
        res_name = #{resName,jdbcType=CHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=CHAR},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=CHAR},
      </if>
      <if test="subtitle != null">
        subtitle = #{subtitle,jdbcType=CHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=CHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=CHAR},
      </if>
      <if test="viewOrder != null">
        view_order = #{viewOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="pubTime != null">
        pub_time = #{pubTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="allow != null">
        allow = #{allow,jdbcType=CHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ucf.first.ao.BeetleArticle">
    update beetle_article
    set res_name = #{resName,jdbcType=CHAR},
      level = #{level,jdbcType=CHAR},
      node_id = #{nodeId,jdbcType=CHAR},
      title = #{title,jdbcType=CHAR},
      subtitle = #{subtitle,jdbcType=CHAR},
      intro = #{intro,jdbcType=CHAR},
      pic = #{pic,jdbcType=CHAR},
      view_order = #{viewOrder,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      pub_time = #{pubTime,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      allow = #{allow,jdbcType=CHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ucf.first.ao.BeetleArticle">
    update beetle_article
    set res_name = #{resName,jdbcType=CHAR},
      level = #{level,jdbcType=CHAR},
      node_id = #{nodeId,jdbcType=CHAR},
      title = #{title,jdbcType=CHAR},
      subtitle = #{subtitle,jdbcType=CHAR},
      intro = #{intro,jdbcType=CHAR},
      pic = #{pic,jdbcType=CHAR},
      view_order = #{viewOrder,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      pub_time = #{pubTime,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      allow = #{allow,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>